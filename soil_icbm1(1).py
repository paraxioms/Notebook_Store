# -*- coding: utf-8 -*-
"""Soil-ICBM1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cdDCyCzFp1rWVMiFJepHvktr82kDbQI1
"""

import numpy as np
import seaborn as sns
import pandas as pd
import plotly.graph_objects as go

"""* i = input
* k1, k2 = outflows from pool young/ pool old
* r = external factors (climate/soil) 
* h = humification coefficent (fraction of annual outflux from Y that enters O)
* t = time (year)

"""

def youngPool(i, k1, r, t, Y0):
  term1 = i/k1*r
  term2 = (Y0 - i/k1*r)*np.exp(-k1*r*t)
  Y = term1 + term2
  return Y

def oldPool(i, k1, k2, r, t, h, Y0, O0):
  term1 = h*(i/k2*r)
  term2 = (O0 - h*i/k2*r - h*((k1*r*Y0-i)/r*(k2-k1)))*np.exp(-k2*r*t)
  term3 = (h*((k1*r*Y0-i)/r*(k2- k1)))*np.exp(-k1*r*t)
  O = term1 + term2 + term3
  return O

def model(i, k1, k2, r, h, Y0, O0, maxt):
  youngPoolVal = [Y0] #initialised with t=0 val
  oldPoolVal = [O0] #initialiased with t=0 val
  plott = list(range(0,maxt+1))
  for t in range(0,maxt):
    youngPoolVal.append(youngPool(i=i, k1=k1, r=r, Y0=Y0, t=t))
    oldPoolVal.append(oldPool(i=i, k1=k1, k2=k2, r=r, Y0=Y0, O0=O0, h=h, t=t))
  d = {"Year": plott, "Young": youngPoolVal, "Old":oldPoolVal}
  modelData = pd.DataFrame(data = d)
  fig = go.Figure()
  fig.add_trace(go.Scatter(x=modelData['Year'], y=modelData['Young'], mode='lines+markers', name="Young"))
  fig.add_trace(go.Scatter(x=modelData['Year'], y=modelData['Old'], mode='lines+markers', name="Old"))
  fig.update_yaxes(title_text = "Soil Carbon Content (kg/m2)")
  fig.update_xaxes(title_text = "Time (Year)")
  fig.show()

"""Run the model with chosen parameters:

"""

model(i = 0.20, k1 = 0.8, k2 = 0.00605, r = 1.00, Y0 = 0.25, O0 = 4.16, h=0.125, maxt = 30)

#youngPool(i = 0.19+0.095, k1 = 0.8, r = 1.00, Y0 = 0.3, t=30)

#oldPool(i = 0.19+0.095, k1 = 0.8, k2 = 0.00605, r = 1.00, Y0 = 0.3, O0 = 4.11, h=0.125, t = 30)

